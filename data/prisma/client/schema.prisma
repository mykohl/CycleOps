generator client {
  provider = "prisma-client-js"
  output = "./client"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model Cyclist {
  id Int @id @default(autoincrement())
  name String?
  nameLast String?
  nameFirst String?
  providerId String @unique
  provider String?
  roles String?
  registered DateTime?
  lastLogIn DateTime?
  claims Claim[]
}

model Claim {
  id Int @id @default(autoincrement())
  claimType String?
  acquired DateTime?
  condition String?
  notes String?
  owner Cyclist? @relation(fields: [ownerId], references: [id])
  ownerId Int?
  item Item? @relation(fields: [itemId], references: [id])
  itemId Int?
}

model Producer {
  id Int @id @default(autoincrement())
  name String?
  nameShort String?
  nameAbbreviation String?
  notes String?
  webAddress String?
  labelMemberships BrandMember[]
}

model BrandMember {
  id Int @id @default(autoincrement())
  brandLabel BrandLabel? @relation(fields: [brandLabelId], references: [id])
  brandLabelId Int?
  producer Producer? @relation(fields: [producerId], references: [id])
  producerId Int?
}

model BrandLabel {
  id Int @id @default(autoincrement())
  type String?
  name String?
  labelMemberships BrandMember[]
  items Item[]
}

model ItemType {
  id Int @id @default(autoincrement())
  name String @unique
  propertyGroups PropertyGroup[]
}

model PropertyGroup {
  id Int @id @default(autoincrement())
  order Int?
  name String @unique
  itemType ItemType? @relation(fields: [itemTypeId], references: [id])
  itemTypeId Int?
  properties Property[]
}

model Property {
  id Int @id @default(autoincrement())
  order Int?
  name String?
  variation String?
  group PropertyGroup? @relation(fields: [groupId], references: [id])
  groupId Int?
  itemProperties ItemProperty[]
}

model Item {
  id Int @id @default(autoincrement())
  type String?
  name String?
  notes String?
  weight Decimal?
  weightUnit String?
  brandLabel BrandLabel? @relation(fields: [brandLabelId], references: [id])
  brandLabelId Int?
  properties ItemProperty[]
  inClaims Claim[]
  hasAssemblyItems Assembly[] @relation(name: "isAssembly")
  inAssemblies Assembly[] @relation(name: "inAssembly")
}

model ItemProperty {
  id Int @id @default(autoincrement())
  item Item? @relation(fields: [itemId], references: [id])
  itemId Int? @unique
  property Property? @relation(fields: [propertyId], references: [id])
  propertyId Int?
  value String?
}

model Assembly {
  id Int @id @default(autoincrement())
  assemblyItem Item? @relation(name: "isAssembly", fields: [assemblyItemId], references: [id])
  assemblyItemId Int?
  item Item? @relation(name: "inAssembly", fields: [itemId], references: [id])
  itemId Int?
}