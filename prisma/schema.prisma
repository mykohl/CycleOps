// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cyclist {
  id Int @id @default(autoincrement())
  name String?
  owns Ownership[]
}

model Ownership {
  id Int @id @default(autoincrement())
  acquired DateTime?
  condition String?
  notes String?
  owner Cyclist? @relation(fields: [ownerId], references: [id])
  ownerId Int?
  bicycle Bicycle? @relation(fields: [bicycleId], references: [id])
  bicycleId Int?
  wheel Wheel? @relation(fields: [wheelId], references: [id])
  wheelId Int?
  wheelSet Wheelset? @relation(fields: [wheelSetId], references: [id])
  wheelSetId Int?
  part Part? @relation(fields: [partId], references: [id])
  partId Int?
}

model Bicycle {
  id Int @id @default(autoincrement())
  notes String?
  parts BicyclePart[]
  owners Ownership[]
}

model BicyclePart {
  id Int @id @default(autoincrement())
  quantity Int?
  notes String?
  bicycle Bicycle? @relation(fields: [bicycleId], references: [id])
  bicycleId Int?
  part Part? @relation(fields: [partId], references: [id])
  partId Int?
}

model Maker {
  id Int @id @default(autoincrement())
  name String?
  notes String?
  parts Part[]
}

model Part {
  id Int @id @default(autoincrement())
  categories String?
  type String?
  designationCode String?
  name String?
  notes String?
  maker Maker? @relation(fields: [makerId], references: [id])
  makerId Int?
  owners Ownership[]
  bicycles BicyclePart[]
  hub PartHub?
  rim PartRim?
  cogset PartCogset?
}

model PartHub {
  id Int @id @default(autoincrement())
  part Part? @relation(fields: [partId], references: [id])
  partId Int? @unique
  specSpokeCount Int?
  specOLD Float?
  specFlangeDiameterLeft Float?
  specFlangeDiameterRight Float?
  specFlangeLeftToCenter Float?
  specFlangeRightToCenter Float?
  specFlangeLeftToOLN Float?
  specFlangeRightToOLN Float?
  specSpokeHoleDiameter Float?
  wheels Wheel[]
}

model PartRim {
  id Int @id @default(autoincrement())
  part Part? @relation(fields: [partId], references: [id])
  partId Int? @unique
  specEffectiveDiameter Float?
  specWidthInternal Float?
  specWidthExternal Float?
  specSectionHeight Float?
  wheels Wheel[]
}

model PartCogset{
  id Int @id @default(autoincrement())
  type String?
  cogs String?
  notes String?
  part Part? @relation(fields: [partId], references: [id])
  partId Int? @unique
}

model Wheel {
  id Int @id @default(autoincrement())
  name String?
  notes String?
  hub PartHub? @relation(fields: [hubId], references: [id])
  hubId Int?
  rim PartRim? @relation(fields: [rimId], references: [id])
  rimId Int?
  wheelsFoward Wheelset[] @relation("wheelFoward")
  wheelsBack Wheelset[] @relation("wheelBack")
  owners Ownership[]
}

model Wheelset {
  id Int @id @default(autoincrement())
  name String?
  notes String?
  wheelFoward Wheel? @relation("wheelFoward", fields: [wheelFowardId], references: [id])
  wheelFowardId Int?
  wheelBack Wheel? @relation("wheelBack", fields: [wheelBackId], references: [id])
  wheelBackId Int?
  owners Ownership[]
}